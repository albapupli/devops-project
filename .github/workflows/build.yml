# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven # name of prj

# checks if there are any push or pull req on master branch, then do the following (executes line 18)
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest #operating system it is run on

    steps:
    - uses: actions/checkout@v3 # checks the dockerfile in order to build t6he docker img so checks for repo in there
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml  

    # generates and publishes docker img in docker hub repo
    - name: Publish to Docker Hub 
      uses: docker/build-push-action@v1  
      with:       
        username: ${{ secrets.DOCKERHUB_USERNAME }} # username of docker hub
        password:  ${{ secrets.DOCKERHUB_PASSWORD }} # password of docker hub
        repository: albapupli/devops-project     
        tags: ${{github.run_number}}

    # using github commands
   # - name: Build and Push Docker Image using GitHub commands
   #   env:
    #    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
     #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      #run: |
       # docker build -t albapupli/devops-project:latest .
        #docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
        #docker push albapupli/devops-project:latest
 
